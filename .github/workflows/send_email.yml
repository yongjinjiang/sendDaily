name: Daily Email Sender

on:
  schedule:
    # Runs daily at 8 AM UTC
    - cron: '0 8 * * *'
    - cron: '0 12 * * *'
    - cron: '0 16 * * *'
    - cron: '0 20 * * *'
  workflow_dispatch: # Allows manual trigger

jobs:
  send_email:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client python-dotenv

    - name: Add credentials.json
      run: echo "$GMAIL_CREDENTIALS" > credentials.json
      env:
        GMAIL_CREDENTIALS: ${{ secrets.GMAIL_CREDENTIALS }}

    - name: Add token.json (if provided)
      run: |
        if [ -n "$TOKEN_JSON" ]; then
          echo "$TOKEN_JSON" > token.json
        fi
      env:
        TOKEN_JSON: ${{ secrets.TOKEN_JSON }}

    - name: Debug TOKEN_JSON
      run: |
        if [ -n "$TOKEN_JSON" ]; then
          echo "::add-mask::$TOKEN_JSON"  # This removes the mask.
          echo "$TOKEN_JSON" > token.json
          echo  "Token _JSON is : $TOKEN_JSON" 
          echo "SHA256 hash of Token $(sha256sum token.json | awk '{print $1}')"
          echo "Token content written to token.json"
        else
          echo "TOKEN_JSON is empty or not set"
          exit 1
        fi
      env:
        TOKEN_JSON: ${{ secrets.TOKEN_JSON }}


    - name: Verify token.json
      run: |
        if [ -f token.json ]; then
          echo "token.json exists and has a size of $(wc -c < token.json) bytes"
          echo  "Token _JSON is : $TOKEN_JSON" 
        else
          echo "token.json does not exist"
          exit 1
        fi
  
    - name: Hash GMAIL_CREDENTIALS
      run: |
        if [ -n "$GMAIL_CREDENTIALS" ]; then
          echo "$GMAIL_CREDENTIALS" > gmail_credentials.json
          echo "SHA256 hash of GMAIL_CREDENTIALS: $(shasum -a 256  gmail_credentials.json | awk '{print $1}')"
        else
          echo "GMAIL_CREDENTIALS is empty or not set"
          exit 1
        fi
      env:
        GMAIL_CREDENTIALS: ${{ secrets.GMAIL_CREDENTIALS }}

    # - name: Run email script
    #   run: python send_email.py
    #   env:
    #     SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
    #     RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
